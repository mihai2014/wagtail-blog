    def serve(self, request):
        page = int( request.COOKIES.get('myblog_page', '0') )
        print(page)

        context = super().get_context(request)
        blogpages = self.get_children().live().order_by('-first_published_at')
        context['blogpages'] = blogpages
        #return render(request, 'blog/blog_index_page.html', context)
        template = get_template('blog/blog_index_page.html')
        #return HttpResponse(template.render(context, request))
        response = HttpResponse(template.render(context, request))
        response.set_cookie('myblog_page', '10', max_age=None)
        return(response)


    def get_context(self, request):

        # Update context to include only published posts, ordered by reverse-chron
        context = super().get_context(request)
        blogpages = self.get_children().live().order_by('-first_published_at')  #[0:len(blogpages)]
        print(len(blogpages))
        context['blogpages'] = blogpages
        context['page'] = '1'

        return context

